{"remainingRequest":"/Users/mac/Desktop/permissions-web/node_modules/babel-loader/lib/index.js!/Users/mac/Desktop/permissions-web/node_modules/eslint-loader/index.js??ref--13-0!/Users/mac/Desktop/permissions-web/src/utils/request.js","dependencies":[{"path":"/Users/mac/Desktop/permissions-web/src/utils/request.js","mtime":1648621592084},{"path":"/Users/mac/Desktop/permissions-web/babel.config.js","mtime":1647345364000},{"path":"/Users/mac/Desktop/permissions-web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/mac/Desktop/permissions-web/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/mac/Desktop/permissions-web/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import axios from 'axios';\nimport { Loading, Message } from 'element-ui';\n/*\n*   success:成功的回调\n*   error:失败的回调\n*   array=>不传默认为[0,0,0],  array[0]:加载动画 array[1]:错误提示 array[2]:同步执行(为1时,this必传)\n*   method:请求方式  默认:post\n*   THIS:vue实例对象(非必传)\n*/\n\nvar my_request = function my_request(url) {\n  var data = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  var method = arguments.length > 2 ? arguments[2] : undefined;\n  var success = arguments.length > 3 ? arguments[3] : undefined;\n  var error = arguments.length > 4 ? arguments[4] : undefined;\n  var array = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : [0, 0, 0];\n  var THIS = arguments.length > 6 ? arguments[6] : undefined;\n\n  if (array[2] && array[2] == 1 && THIS) {\n    if (THIS.request_single_flag) {\n      return false;\n    }\n\n    ;\n    THIS.request_single_flag = true;\n  }\n\n  ;\n  var request_url = window.localStorage.host + url;\n  var requestObject = {\n    method: method ? method : 'post',\n    url: request_url,\n    data: data\n  };\n\n  if (url != '/login') {\n    requestObject.headers = {\n      token: window.localStorage.flexible_manage_token\n    };\n  }\n\n  ;\n  var loading;\n\n  if (array[0] == 1) {\n    loading = Loading.service({\n      lock: true,\n      text: 'Loading',\n      spinner: 'el-icon-loading',\n      background: 'rgba(0, 0, 0, 0)'\n    });\n  }\n\n  ;\n  axios(requestObject).then(function (res) {\n    if (array[0] == 1) {\n      loading.close();\n    }\n\n    ;\n\n    if (array[2] && array[2] == 1 && THIS) {\n      THIS.request_single_flag = false;\n    }\n\n    ;\n\n    if (res.data.code == 200) {\n      success(res.data.data);\n    } else {\n      if (error) {\n        error(res.data.msg);\n      }\n\n      ;\n\n      if (array[1] && array[1] == 1) {\n        Message({\n          message: res.data.msg,\n          type: 'error'\n        });\n      }\n\n      ;\n    }\n\n    ;\n  }).catch(function (err) {\n    if (error) {\n      error(err);\n    }\n\n    ;\n\n    if (array[1] && array[1] == 1) {\n      Message({\n        message: '网络错误，请稍后重试！',\n        type: 'error'\n      });\n    }\n\n    ;\n\n    if (array[2] && array[2] == 1 && THIS) {\n      THIS.request_single_flag = false;\n    }\n\n    ;\n  });\n};\n\nexport default my_request;",{"version":3,"sources":["/Users/mac/Desktop/permissions-web/src/utils/request.js"],"names":["axios","Loading","Message","my_request","url","data","method","success","error","array","THIS","request_single_flag","request_url","window","localStorage","host","requestObject","headers","token","flexible_manage_token","loading","service","lock","text","spinner","background","then","res","close","code","msg","message","type","catch","err"],"mappings":"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","sourcesContent":["import axios from 'axios';\nimport { Loading,Message } from 'element-ui';\n\n/*\n*   success:成功的回调\n*   error:失败的回调\n*   array=>不传默认为[0,0,0],  array[0]:加载动画 array[1]:错误提示 array[2]:同步执行(为1时,this必传)\n*   method:请求方式  默认:post\n*   THIS:vue实例对象(非必传)\n*/\nlet my_request = function (url,data={},method,success,error,array=[0,0,0],THIS){\n  if (array[2]&&array[2]==1&&THIS) {\n    if (THIS.request_single_flag) { return false };\n    THIS.request_single_flag = true;\n  };\n  let request_url = window.localStorage.host + url;\n  let requestObject = {\n      method:method?method:'post',\n      url:request_url,\n      data:data\n  };\n  if(url != '/login'){\n      requestObject.headers = {\n          token:window.localStorage.flexible_manage_token\n      }\n  };\n  let loading;\n  if (array[0] == 1) {\n      loading = Loading.service({lock: true,text: 'Loading',spinner: 'el-icon-loading',background: 'rgba(0, 0, 0, 0)'});\n  };\n  axios(requestObject).then(res=>{\n      if (array[0] == 1) { loading.close() };\n      if (array[2]&&array[2]==1&&THIS) {\n        THIS.request_single_flag = false;\n      };\n      if (res.data.code==200){\n          success(res.data.data);\n      }else{\n          if(error){ error(res.data.msg) };\n          if(array[1]&&array[1]==1) { Message({ message: res.data.msg, type: 'error' }) };\n      };\n  }).catch(err => {\n      if(error){ \n        error(err) \n      };\n      if(array[1]&&array[1]==1) { \n        Message({ message: '网络错误，请稍后重试！', type: 'error' }) \n      };\n      if (array[2]&&array[2]==1&&THIS) {\n        THIS.request_single_flag = false;\n    };\n  })\n};\n\nexport default my_request;\n"]}]}